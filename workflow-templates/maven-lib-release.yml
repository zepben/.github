name: Maven Release

on: workflow_dispatch

jobs:
  release-checks:
    runs-on: ubuntu-latest
    container: zepben/pipeline-basic:5.0.0
    env:
      NEXUS_MAVEN_REPO: ${{ secrets.NEXUS_MAVEN_REPO }}
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NEXUS_MAVEN_SNAPSHOT: ${{ secrets.NEXUS_MAVEN_SNAPSHOT }}
      NEXUS_MAVEN_RELEASE: ${{ secrets.NEXUS_MAVEN_RELEASE }}
      SLACK_NOTIFICATION: YES
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - uses: actions/checkout@v2
      - name: Release checks and update version for release
        run: |
          /scripts/release-checks.sh --java --maven pom.xml
          /scripts/finalize-version.sh --java --maven pom.xml
        shell: bash
  deploy-central:
    needs: release-checks
    runs-on: ubuntu-latest
    container: zepben/pipeline-java
    steps:
      - uses: actions/checkout@v2

      - name: Cache maven deps
        uses: actions/cache@v2
        with:
          path: /maven
          key: maven

      - name: Checkout release branch
        run: |
          git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
          git fetch --all
          git checkout release
        shell: bash

      - name: Maven deploy to Central
        id: build
        uses: zepben/maven-deploy-central-action@main
        with:
          NEXUS_MAVEN_REPO: ${{ secrets.NEXUS_MAVEN_REPO }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          ZEPBEN_GPG_KEY: ${{ secrets.ZEPBEN_GPG_KEY_B64 }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
        continue-on-error: true

      - name: Merge and Tag
        if: steps.build.outcome == 'success'
        run: | 
          git checkout ${GITHUB_REF/refs\/heads\//}
          git merge release
          git push origin ${GITHUB_REF/refs\/heads\//}
          version=$(xmlstarlet pyx pom.xml | grep -v ^A | xmlstarlet p2x | xmlstarlet sel -t -v "/project/version")
          git tag "v$version"
          git push --tags
        shell: bash

      - name: Fail build
        if: steps.build.outcome == 'failure'
        run: | 
          git push origin -d release
          echo "There was an error in the mvn deploy command above."
          exit 1
        shell: bash

  update-version:
    needs: deploy-central
    runs-on: ubuntu-latest
    container: zepben/pipeline-basic:5.0.0
    env:
      NEXUS_MAVEN_REPO: ${{ secrets.NEXUS_MAVEN_REPO }}
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NEXUS_MAVEN_SNAPSHOT: ${{ secrets.NEXUS_MAVEN_SNAPSHOT }}
      NEXUS_MAVEN_RELEASE: ${{ secrets.NEXUS_MAVEN_RELEASE }}
      SLACK_NOTIFICATION: YES
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - uses: actions/checkout@v2
      - name: Update to next minor version
        run: /scripts/update-version.sh --java --maven --release pom.xml
        shell: bash
