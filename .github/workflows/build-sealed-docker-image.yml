name: Build Sealed Docker Image
on:
  workflow_call:
    inputs:
      version_tag:
        description: Precomputed version tag to use as a Docker image tag
        type: string
        default: ''
      latest_tag:
        description: If the image should be tagged with 'latest'. Should only be used for release builds
        type: boolean
        default: false
      edge_tag:
        description: If the image should be tagged with 'edge'. Should only be used for snapshot builds
        type: boolean
        default: false
      push_image:
        description: If the image should be pushed to GHCR
        type: boolean
        default: false
      dockerfile:
        description: Override the Dockerfile in use
        type: string
        default: 'Dockerfile'
      build-args:
        description: Build args for building the Dockerfile
        required: false
        type: string
        default: ''
      commit:
        description: Override the commit to build the container on
        required: false
        type: string
        default: ''
      sha-tags:
        description: Override if we should push SHA based tags. Should be false for bundled containers
        required: false
        type: boolean
        default: true
    secrets:
      CI_GITHUB_TOKEN:
        required: true

      # Nexus Login
      NEXUS_USERNAME:
        required: true
      NEXUS_PASSWORD:
        required: true
      NEXUS_SIGNATURE:
        required: true

      # Nexus docker CR
      NEXUS_DOCKER_REPO:
        required: true

      # Maven
      NEXUS_MAVEN_REPO:
        required: true
      NEXUS_MAVEN_SNAPSHOT:
        required: true
      NEXUS_MAVEN_RELEASE:
        required: true

      # NPM
      NEXUS_NPM_REPO:
        required: true

      # Nuget
      NEXUS_NUGET_FEED:
        required: true

env:
  REGISTRY_URL: "ghcr.io/${{ github.repository }}"
  NEXUS_REGISTRY_URL: "${{ secrets.NEXUS_DOCKER_REPO }}/${{ github.repository }}"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit }}

      - name: Get SHAs
        id: sha
        run: |
          SHORT_REF=$(git rev-parse --short HEAD)
          LONG_REF=$(git rev-parse HEAD)
          echo "short_ref=$SHORT_REF" >> $GITHUB_OUTPUT
          echo "long_ref=$LONG_REF" >> $GITHUB_OUTPUT

      - name: Login to NPM
        run: |
          rm -rf ~/.npmrc
          echo "@zepben:registry=${{ secrets.NEXUS_NPM_REPO }}" >> ~/.npmrc
          echo "//nexus.z.zepben.cloud/repository/zepben-npm/:_authToken=${{ secrets.CI_NPM_TOKEN }}" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.CI_GITHUB_TOKEN }}" >> ~/.npmrc
          echo "\n" >> ~/.npmrc

      - name: Login to Maven
        uses: zepben/maven-login@main
        with:
          maven-repo-url: ${{ secrets.NEXUS_MAVEN_REPO }}
          maven-release-url: ${{ secrets.NEXUS_MAVEN_RELEASE }}
          maven-snapshot-url: ${{ secrets.NEXUS_MAVEN_SNAPSHOT }}
          server-username: ${{ secrets.NEXUS_USERNAME }}
          server-password: ${{ secrets.NEXUS_PASSWORD }}
          nexus-signature: ${{ secrets.NEXUS_SIGNATURE }}

      - name: Login to Nuget
        run: |
          dotnet nuget remove source "Zepben" || true
          dotnet nuget add source "${{ secrets.NEXUS_NUGET_FEED }}" --name "Zepben" --username "${{ secrets.NEXUS_USERNAME }}" --password "${{ secrets.NEXUS_PASSWORD }}" --store-password-in-clear-text

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Login to Nexus Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NEXUS_DOCKER_REPO }} 
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      # Priority sorting determines the tag used in the OCI label
      # The current order preferences the version, then commit, then any special tags
      # We always push a commit based tag
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_URL }}
            ${{ env.NEXUS_REGISTRY_URL }}
          labels: |
            org.opencontainers.image.vendor=Zepben
          tags: |
            type=raw,value=sha-${{ steps.sha.outputs.short_ref }},enable=${{ inputs.sha-tags }},priority=200
            type=raw,value=sha-${{ steps.sha.outputs.long_ref }},enable=${{ inputs.sha-tags }},priority=220
            type=raw,value=${{ inputs.version_tag }},enable=${{ inputs.version_tag != '' }},priority=900
            type=raw,value=edge,enable=${{ inputs.edge_tag }},priority=100
            type=raw,value=latest,enable=${{ inputs.latest_tag }},priority=100

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ inputs.push_image }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.dockerfile }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: ${{ inputs.build-args }}
          secret-files: |
            npm=/home/runner/.npmrc
            maven=/home/runner/.m2/settings.xml
            nuget=/home/runner/.nuget/NuGet/NuGet.Config

