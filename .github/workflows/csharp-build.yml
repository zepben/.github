name: CSharp Build App
 
on: 
  workflow_call:
    inputs:
      test_files:
        description: 'Test dll output files separated by space.'
        required: false
        default: ''
        type: string
      private:
        description: 'Calling workflow from a private repo'
        required: false
        type: boolean
        default: true
      sourcepath:
        description: 'Path to source directory (used for licence check)'
        required: false
        type: string
        default: "src"
      configuration:
        description: 'Configuration'
        required: false
        type: string
        default: "Release"
      platform:
        description: 'Platform'
        required: false
        type: string
        default: "x64"
    secrets:
      CI_GITHUB_TOKEN:
        required: true
      NEXUS_USERNAME:
        required: false
      NEXUS_PASSWORD: 
        required: false
      LC_URL: 
        required: false
 
jobs:
  checks:
    runs-on: ubuntu-latest
    container: zepben/pipeline-basic
    outputs: 
      docs-present: ${{ steps.docs.outputs.present }}
    env:
      GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - name: Work around git permission issue
        run: |
          dname=$(echo ${{github.repository}} | cut -d'/' -f2)
          git config --global --add safe.directory /__w/$dname/$dname
        shell: sh

      - name: Cache licence-check
        uses: actions/cache@v4
        with:
          path: /lc
          key: lcc

      - name: Check licence
        uses: zepben/licence-check-action@main
        with:
          LC_URL: ${{ secrets.LC_URL }}
          PATH: ${{ inputs.sourcepath }}

      - name: Check if docs present
        id: docs
        shell: bash
        run: |
          if [ -d docs ]; then
            echo "Docs folder found, will run the build-docs job"
            echo "present=yes" >> "${GITHUB_OUTPUT}"
            echo "present=yes" >> "${GITHUB_ENV}"
          else
            echo "Docs folder not found, will skip the build-docs"
          fi

      - name: Check doc build artifacts are ignored
        if: ${{ env.present == 'yes' }}
        shell: sh {0}
        run: |
          # Make sure directories are properly ignored
          # docs/node_modules
          git check-ignore -q docs/node_modules 
          if [ $? != 0 ]; then
              echo "ERROR! Make sure to add 'docs/node_modules' to .gitignore"
              echo "::error line=1::ERROR! Make sure to add 'docs/node_modules' to .gitignore"
              exit 1
          fi

          # docs/build
          git check-ignore -q docs/build 
          if [ $? != 0 ]; then
              echo "ERROR! Make sure to add 'docs/docs' to .gitignore"
              echo "::error line=1::ERROR! Make sure to add 'docs/build' to .gitignore"
              exit 1
          fi

  build-and-test:
    needs: checks
    runs-on: windows-2025
    env:
      DEBUG: ${{ secrets.DEBUG }}
      GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ env.GITHUB_TOKEN }}

    - name: Work around git permission issue
      run: |
        dname=$(echo ${{github.repository}} | cut -d'/' -f2)
        git config --global --add safe.directory /__w/$dname/$dname
      shell: sh

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
     
    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1.1.1

    - name: Add ZepBen Nuget Repo credentials
      run: nuget sources update -Name "ZepBen" -username "${{ secrets.NEXUS_USERNAME }}" -password "${{ secrets.NEXUS_PASSWORD }}" -configFile "Nuget.Config"

    - name: Restore NuGet Packages
      run:   
        msbuild /p:Configuration=${{ inputs.configuration }} /p:Platform=${{ inputs.platform }} /t:restore

    - name: Build
      run: msbuild /p:Configuration=${{ inputs.configuration }} /p:Platform=${{ inputs.platform }}

    - name: Test
      if: ${{ inputs.test_files != '' }}
      run: vstest.console.exe ${{ inputs.test_files }} /Platform:${{ inputs.platform }}

  build-docs:
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ needs.checks.outputs.docs-present == 'yes' }}
    container: node:20-alpine
    steps:

      - uses: actions/checkout@v4

      - name: Build docusaurus
        id: build
        uses: zepben/docusaurus-action@main
        with:
          TAG: false
          NPM_REPO: ${{ secrets.NPM_REPO }}
          NPM_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
