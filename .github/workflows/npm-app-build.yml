name: NPM Static App Build

on: 
  workflow_call:
    inputs:
      private:
        description: 'Calling workflow from a private repo'
        required: false
        type: boolean
        default: true
      build-docs:
        description: 'Repo has docusaurus docs'
        required: false
        type: boolean
        default: false
      licencecheck:
        description: 'Need to check licence headers/files'
        required: false
        type: boolean
        default: false
      sourcepath:
        description: 'Path to source directory (used for licence check)'
        required: false
        type: string
        default: "src"
    secrets:
      NEXUS_NPM_REPO:
        required: true
      CI_NPM_TOKEN:
        required: true
      CI_GITHUB_TOKEN:
        required: true
      LC_URL: 
        required: false

jobs:
  build-and-test:
    env:
      LICENCE_CHECK: ${{ inputs.licencecheck }}
    runs-on: ubuntu-latest
    container: node:14-alpine
    continue-on-error: false
    outputs: 
      docs: ${{ steps.docs.outputs.present }}
    steps:
      - name: Install Dependencies
        run: |
          apk add jq tar alpine-conf git

      - name: Cache nodejs deps
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm

      - uses: actions/checkout@v3

      - name: Cache licence-check
        if: ${{ env.LICENCE_CHECK == true }}
        uses: actions/cache@v3
        with:
          path: /lc
          key: lcc

      - name: Check licence
        if: ${{ env.LICENCE_CHECK == true }}
        uses: zepben/licence-check-action@main
        with:
          LC_URL: ${{ secrets.LC_URL }}
          PATH: ${{ inputs.sourcepath }}

      - name: Set timezone to Australia/ACT
        run: |
          setup-timezone -z Australia/ACT

      - name: create .npmrc
        run: | 
          rm -rf ~/.npmrc
          echo "@zepben:registry=${{ secrets.NEXUS_NPM_REPO }}" >> ~/.npmrc
          echo "//mavenrepo.zepben.com/repository/zepben-npm/:_authToken=${{ secrets.CI_NPM_TOKEN }}" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.CI_GITHUB_TOKEN }}" >> ~/.npmrc
          echo "\n" >> ~/.npmrc

      - name: Build and test
        run: |
          echo "NPM is sensitive to .npmrc formatting; check that it has a newline at the end!!!"
          npm ci --unsafe-perm
          npm run ci

      - name: Check if docs present
        id: docs
        run: |
          if [ -d docs ]; then
            echo "Docs folder found, will run the build-docs job"
            echo "present=yes" >> "${GITHUB_OUTPUT}"
          else
            echo "Docs folder not found, will skip the build-docs"
          fi

  build-docs:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ needs.build-and-test.outputs.docs == 'yes' }}
    container: node:16-alpine
    steps:

      - uses: actions/checkout@v3

      - name: Build docusaurus
        id: build
        uses: zepben/docusaurus-action@main
        with:
          TAG-AND-RELEASE: false
          NPM_REPO: ${{ secrets.NPM_REPO }}
          NPM_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
