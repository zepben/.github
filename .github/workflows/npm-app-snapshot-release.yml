name: NPM Static App Snapshot Release

on:
  workflow_call:
    inputs:
      private:
        description: 'Calling workflow from a private repo'
        required: true
        type: boolean
        default: true
    secrets:
      NEXUS_NPM_REPO:
        required: true
      CI_NPM_TOKEN:
        required: true
      CI_GITHUB_TOKEN:
        required: true
      SLACK_NOTIFICATION:
        required: false
      SLACK_WEBHOOK:
        required: false


jobs:
  release-checks:
    runs-on: ubuntu-latest
    container: zepben/pipeline-basic
    continue-on-error: false
    env:
      SLACK_NOTIFICATION: YES
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - uses: actions/checkout@v2

      - name: Work around git permission issue
        run: |
          dname=$(echo ${{github.repository}} | cut -d'/' -f2)
          git config --global --add safe.directory /__w/$dname/$dname
        shell: sh

      - name: Release checks and update version for release
        run: |
          /scripts/release-checks.sh --js package.json
        shell: bash

  build-artifact:
    needs: release-checks
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.build.outputs.artifact }}
      version: ${{ steps.build.outputs.version }}
    steps:
    - uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'

    - name: create .npmrc
      run: | 
        rm -rf .npmrc
        echo "//mavenrepo.zepben.com/repository/zepben-npm/:_authtoken=${{ secrets.CI_NPM_TOKEN }}" >> .npmrc
        echo "@zepben:registry=${{ secrets.NEXUS_NPM_REPO }}" >> .npmrc

    - name: build 
      id: build
      run: |
        npm ci --unsafe-perm
        npm run prod
        version=$(jq -r .version package.json)
        artifactId=$(jq -r .name package.json)
        artifact="$artifactId-$version-SNAPSHOT.tar.bz2"
        tar jcvf "$artifact" -C dist .
        echo "::set-output name=version::$(echo $version)"
        echo "::set-output name=artifact::$(echo $artifact)"

    - uses: actions/upload-artifact@master
      if: steps.build.outcome == 'success'
      with:
        name: ${{ steps.build.outputs.artifact }}
        path: ${{ steps.build.outputs.artifact }}

  update-snapshot-version:
    needs: [build-artifact]
    container: zepben/pipeline-basic
    runs-on: ubuntu-latest
    env:
      DEBUG: ${{ secrets.DEBUG }}
      SLACK_NOTIFICATION: YES
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - name: Work around git permission issue
        run: |
          dname=$(echo ${{github.repository}} | cut -d'/' -f2)
          git config --global --add safe.directory /__w/$dname/$dname
        shell: sh

      - name: Update snapshot version
        run: |
          /scripts/update-version.sh --js --snapshot package.json
