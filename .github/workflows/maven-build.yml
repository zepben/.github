name: Maven Build

on: 
  workflow_call:
    inputs:
      private:
        description: 'Calling workflow from a private repo'
        required: false
        type: boolean
        default: true
      licencecheck:
        description: 'Need to check licence headers/files'
        required: false
        type: boolean
        default: false
      sourcepath:
        description: 'Path to source directory (used for licence check)'
        required: false
        type: string
        default: "src"
    secrets:
      NEXUS_MAVEN_REPO:
        required: true
      NEXUS_USERNAME:
        required: true
      NEXUS_PASSWORD:
        required: true
      LC_URL: 
        required: false


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container: zepben/pipeline-java
    outputs: 
      docs: ${{ steps.docs.outputs.present }}
    env:
      LICENCE_CHECK: ${{ inputs.licencecheck }}
      NEXUS_MAVEN_REPO: ${{ secrets.NEXUS_MAVEN_REPO }}
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache licence-check
        if: ${{ env.LICENCE_CHECK == true }}
        uses: actions/cache@v3
        with:
          path: /lc
          key: lcc

      - name: Check licence
        if: ${{ env.LICENCE_CHECK == true }}
        uses: zepben/licence-check-action@main
        with:
          LC_URL: ${{ secrets.LC_URL }}
          PATH: ${{ inputs.sourcepath }}

      - name: Cache maven deps
        uses: actions/cache@v3
        with:
          path: /maven
          key: maven

      - name: Maven build and test
        id: build
        run: |
          mvn clean test -f pom.xml -Dserver.username=$NEXUS_USERNAME -Dserver.password=$NEXUS_PASSWORD -Dserver.repo.url=$NEXUS_MAVEN_REPO
        shell: bash

      - name: Upload coverage to Codecov
        if: steps.build.outcome == 'success'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Check if docs present
        id: docs
        run: |
          if [ -d docs ]; then
            echo "Docs folder found, will run the build-docs job"
            echo "present=yes" >> "${GITHUB_OUTPUT}"
          else
            echo "Docs folder not found, will skip the build-docs"
          fi

  build-docs:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ needs.build-and-test.outputs.docs == 'yes' }}
    container: node:16-alpine
    steps:

      - uses: actions/checkout@v3

      - name: Build docusaurus
        id: build
        uses: zepben/docusaurus-action@main
        with:
          TAG-AND-RELEASE: false
          NPM_REPO: ${{ secrets.NPM_REPO }}
          NPM_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
